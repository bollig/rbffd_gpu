I separated grid_generators and grids because I assumed a grid was 
a structure representing the output of all generators. Generators 
can be: 
	regular (Cartesian)
	rectilinear
	curvilinear
	CVT
	etc.

Grids can be: 
	structured
		regular
		rectilinear
		curvilinear
	unstructured
		cvt

Do I want to merge these two? Yes. 

	Start with Grid class which is JUST the data structure
		Grid {
			nodes
			boundary_node_indices
			boundary_normals
		}

	Have subclasses RegularGrid, RectilinearGrid, CurvilinearGrid, CVTGrid specialize the
	datastructure generation: 
		rg = RegularGrid(5, 5); 	// Construct 5x5 cartesian
		rg.resize(10,10,10); 		// Resize the grid to 10x10x10 cartesian
		rg.generate(11,11,11); 		// Synonomous with "resize()"

		rg = RegularGrid(false); 	// Avoid generating grid for the moment
		rg.resize(10,10,10); 		// Generate grid for first time
	NOTE: constructor will generate initial datastructure UNLESS false is passed as parameter. 

		cvg = NestedSphereCVTGrid(false); 
		cvg.setSamplesPerIter(10000); 
		cvg.setBoundaryIter(60); 
		cvg.setInteriorIter(100); 		
		cvg.generate(0.5, 1.0);		// Generate a new CVTGrid using the specified parameters for CVT iterations on nested spheres radii 0.5, 1.0 

	
	
