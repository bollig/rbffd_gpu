DIMENSION = 2
#NB_INNER_BOUNDARY=100
#NB_OUTER_BOUNDARY=200
NB_INTERIOR=1000
DEBUG= 0


USE_VAR_EPSILON = 0
# vareps = alpha / avg_stencil_radii^(beta)
VAR_EPSILON_ALPHA=0.8
VAR_EPSILON_BETA=0.5
# Enabled ONLY if USE_VAR_EPSILON=0
EPSILON=0.5


STENCIL_SIZE=15

#INNER_RADIUS = 0.5
#OUTER_RADIUS = 1.0
#

INNER_AXIS_MAJOR = 0.5
INNER_AXIS_MINOR = 0.5
OUTER_AXIS_MAJOR = 1.0
OUTER_AXIS_MINOR = 1.0


#
# EYE OF SAURON: 
#INNER_AXIS_MAJOR = 0.5
#INNER_AXIS_MINOR = 0.9
#OUTER_AXIS_MAJOR = 2.0
#OUTER_AXIS_MINOR = 1.0

NB_CVT_SAMPLES = 10000
NB_CVT_ITERATIONS = 100


###############
# SWITCHES
###############
# 0 = Dirichlet; 1 = Neumann; 2 = Robin
BOUNDARY_CONDITION = 0

###############
# BOOLEANS
###############


# Disable non-uniform diffusivity
USE_UNIFORM_DIFFUSION = 1

# (0:FALSE; 1:TRUE) Compute a discrete approximation for RHS values for the Discrete Compat. Condition
USE_DISCRETE_RHS = 0

# (0:FALSE; 1:TRUE) Disable the solution constraint on Neumann and Robin boundary conditions
DISABLE_SOL_CONSTRAINT = 0

# (0:FALSE; 1:TRUE) Should we enforce symmetric stencils by removing unsymmetric edges in the node graph
FORCE_SYMMETRIC_STENCILS = 0

# (0:FALSE; 1:TRUE) Should we run the extensive derivative tests on the weights to check precision? 
RUN_DERIVATIVE_TESTS = 0

TEST_DIRICHLET_LOCKDOWN = 0

# Should we solve A x = b where A=L+L' (symmetric weighting?)
CHECK_L_PLUS_L_TRANSPOSE = 0

# (0:FALSE; 1:TRUE) Enable/disable debugging prints
DEBUG_MODE = 0


